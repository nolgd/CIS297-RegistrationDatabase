/*
Deployment script for Registration

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Registration"
:setvar DefaultFilePrefix "Registration"
:setvar DefaultDataPath "C:\Users\Lileeper\AppData\Local\Microsoft\VisualStudio\SSDT\CollegeRegistration"
:setvar DefaultLogPath "C:\Users\Lileeper\AppData\Local\Microsoft\VisualStudio\SSDT\CollegeRegistration"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 8cf41086-2754-4ae7-b35a-8cdeea9fba4d is skipped, element [dbo].[Major].[Collegee] (SqlSimpleColumn) will not be renamed to College';


GO
PRINT N'Rename refactoring operation with key e19f9a95-ba87-4dc7-9afd-8542b8fa95f3 is skipped, element [dbo].[FK_Student_ToTable] (SqlForeignKeyConstraint) will not be renamed to [FK_Student_Major]';


GO
PRINT N'Rename refactoring operation with key 7ef7625e-fb2d-4f63-9bec-044affc6e1ba is skipped, element [dbo].[Enrollment].[CourseID] (SqlSimpleColumn) will not be renamed to SectionID';


GO
PRINT N'Creating [dbo].[Course]...';


GO
CREATE TABLE [dbo].[Course] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (50) NOT NULL,
    [Number]     NVARCHAR (10) NOT NULL,
    [Credits]    INT           NOT NULL,
    [Department] NCHAR (10)    NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Enrollment]...';


GO
CREATE TABLE [dbo].[Enrollment] (
    [Id]        INT          IDENTITY (1, 1) NOT NULL,
    [SectionID] INT          NOT NULL,
    [StudentID] INT          NOT NULL,
    [Grade]     NVARCHAR (2) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Faculty]...';


GO
CREATE TABLE [dbo].[Faculty] (
    [Id]          INT           NOT NULL,
    [Name]        NVARCHAR (50) NOT NULL,
    [PhoneNumber] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Major]...';


GO
CREATE TABLE [dbo].[Major] (
    [Id]      INT           IDENTITY (1, 1) NOT NULL,
    [Name]    NVARCHAR (50) NOT NULL,
    [College] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Section]...';


GO
CREATE TABLE [dbo].[Section] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [CourseID]  INT           NOT NULL,
    [FacultyID] INT           NOT NULL,
    [Day]       NVARCHAR (50) NOT NULL,
    [Time]      NVARCHAR (50) NOT NULL,
    [Semester]  NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Student]...';


GO
CREATE TABLE [dbo].[Student] (
    [Id]      INT           IDENTITY (1, 1) NOT NULL,
    [Name]    NVARCHAR (50) NOT NULL,
    [MajorID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Enrollment_Student]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrollment_Student] FOREIGN KEY ([StudentID]) REFERENCES [dbo].[Student] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Enrollment_Section]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrollment_Section] FOREIGN KEY ([SectionID]) REFERENCES [dbo].[Section] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Section_Faculty]...';


GO
ALTER TABLE [dbo].[Section] WITH NOCHECK
    ADD CONSTRAINT [FK_Section_Faculty] FOREIGN KEY ([FacultyID]) REFERENCES [dbo].[Faculty] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Section_Course]...';


GO
ALTER TABLE [dbo].[Section] WITH NOCHECK
    ADD CONSTRAINT [FK_Section_Course] FOREIGN KEY ([CourseID]) REFERENCES [dbo].[Course] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Student_Major]...';


GO
ALTER TABLE [dbo].[Student] WITH NOCHECK
    ADD CONSTRAINT [FK_Student_Major] FOREIGN KEY ([MajorID]) REFERENCES [dbo].[Major] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8cf41086-2754-4ae7-b35a-8cdeea9fba4d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8cf41086-2754-4ae7-b35a-8cdeea9fba4d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e19f9a95-ba87-4dc7-9afd-8542b8fa95f3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e19f9a95-ba87-4dc7-9afd-8542b8fa95f3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ea8a2464-2a7b-4736-b04a-031f00219f8d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ea8a2464-2a7b-4736-b04a-031f00219f8d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7aebdb75-bf9d-43f3-b7b8-3a9d02718d91')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7aebdb75-bf9d-43f3-b7b8-3a9d02718d91')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7ef7625e-fb2d-4f63-9bec-044affc6e1ba')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7ef7625e-fb2d-4f63-9bec-044affc6e1ba')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Enrollment] WITH CHECK CHECK CONSTRAINT [FK_Enrollment_Student];

ALTER TABLE [dbo].[Enrollment] WITH CHECK CHECK CONSTRAINT [FK_Enrollment_Section];

ALTER TABLE [dbo].[Section] WITH CHECK CHECK CONSTRAINT [FK_Section_Faculty];

ALTER TABLE [dbo].[Section] WITH CHECK CHECK CONSTRAINT [FK_Section_Course];

ALTER TABLE [dbo].[Student] WITH CHECK CHECK CONSTRAINT [FK_Student_Major];


GO
PRINT N'Update complete.';


GO
